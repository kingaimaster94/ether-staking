{
    "abi": [
        {
            "type": "function",
            "name": "fetchQueuedWithdrawals",
            "inputs": [
                {
                    "name": "staker",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "queuedWithdrawals",
                    "type": "tuple[]",
                    "internalType": "struct Withdraw.QueuedWithdrawal[]",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "request",
                            "type": "tuple",
                            "internalType": "struct Withdraw.WithdrawRequest",
                            "components": [
                                {
                                    "name": "vaults",
                                    "type": "address[]",
                                    "internalType": "contract IVault[]"
                                },
                                {
                                    "name": "shares",
                                    "type": "uint256[]",
                                    "internalType": "uint256[]"
                                },
                                {
                                    "name": "withdrawer",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "finishWithdraw",
            "inputs": [
                {
                    "name": "withdrawals",
                    "type": "tuple[]",
                    "internalType": "struct Withdraw.QueuedWithdrawal[]",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "request",
                            "type": "tuple",
                            "internalType": "struct Withdraw.WithdrawRequest",
                            "components": [
                                {
                                    "name": "vaults",
                                    "type": "address[]",
                                    "internalType": "contract IVault[]"
                                },
                                {
                                    "name": "shares",
                                    "type": "uint256[]",
                                    "internalType": "uint256[]"
                                },
                                {
                                    "name": "withdrawer",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "vaultManager",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "minWithdrawDelay",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "manager",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isWithdrawPending",
            "inputs": [
                {
                    "name": "withdrawal",
                    "type": "tuple",
                    "internalType": "struct Withdraw.QueuedWithdrawal",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "request",
                            "type": "tuple",
                            "internalType": "struct Withdraw.WithdrawRequest",
                            "components": [
                                {
                                    "name": "vaults",
                                    "type": "address[]",
                                    "internalType": "contract IVault[]"
                                },
                                {
                                    "name": "shares",
                                    "type": "uint256[]",
                                    "internalType": "uint256[]"
                                },
                                {
                                    "name": "withdrawer",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [
                {
                    "name": "toPause",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "startWithdraw",
            "inputs": [
                {
                    "name": "withdrawRequest",
                    "type": "tuple[]",
                    "internalType": "struct Withdraw.WithdrawRequest[]",
                    "components": [
                        {
                            "name": "vaults",
                            "type": "address[]",
                            "internalType": "contract IVault[]"
                        },
                        {
                            "name": "shares",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "withdrawer",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "withdrawalRoots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "",
                    "type": "tuple[]",
                    "internalType": "struct Withdraw.QueuedWithdrawal[]",
                    "components": [
                        {
                            "name": "staker",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "delegatedTo",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "nonce",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "start",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "request",
                            "type": "tuple",
                            "internalType": "struct Withdraw.WithdrawRequest",
                            "components": [
                                {
                                    "name": "vaults",
                                    "type": "address[]",
                                    "internalType": "contract IVault[]"
                                },
                                {
                                    "name": "shares",
                                    "type": "uint256[]",
                                    "internalType": "uint256[]"
                                },
                                {
                                    "name": "withdrawer",
                                    "type": "address",
                                    "internalType": "address"
                                }
                            ]
                        }
                    ]
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "withdrawalDelay",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        }
    ],
    "bytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "fetchQueuedWithdrawals(address)": "8c475559",
        "finishWithdraw((address,address,uint256,uint256,(address[],uint256[],address))[])": "86e9a1f7",
        "initialize(address,uint256,address)": "c350a1b5",
        "isWithdrawPending((address,address,uint256,uint256,(address[],uint256[],address)))": "4618c974",
        "pause(bool)": "02329a29",
        "startWithdraw((address[],uint256[],address)[])": "92dca407",
        "withdrawalDelay()": "a7ab6961"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"fetchQueuedWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IVault[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct Withdraw.WithdrawRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"internalType\":\"struct Withdraw.QueuedWithdrawal[]\",\"name\":\"queuedWithdrawals\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IVault[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct Withdraw.WithdrawRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"internalType\":\"struct Withdraw.QueuedWithdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"}],\"name\":\"finishWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minWithdrawDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IVault[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct Withdraw.WithdrawRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"internalType\":\"struct Withdraw.QueuedWithdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"isWithdrawPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"toPause\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IVault[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct Withdraw.WithdrawRequest[]\",\"name\":\"withdrawRequest\",\"type\":\"tuple[]\"}],\"name\":\"startWithdraw\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IVault[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct Withdraw.WithdrawRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"internalType\":\"struct Withdraw.QueuedWithdrawal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDelegationManager.sol\":\"IDelegationManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3\",\"dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs\"]},\"node_modules/solady/src/auth/OwnableRoles.sol\":{\"keccak256\":\"0xd797b6f74f6421d77d74cda55d494470495264ab100cff82a71ff2297d4870e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7504f97d8d3a908802f40fabbb4dcfcbf8e008b627be57f14ee84b67e0d9f3c\",\"dweb:/ipfs/QmXYrdhsYTGDqBdSvvyXQNVpZRAPYXdCcERG8DDPXZY67L\"]},\"src/interfaces/Constants.sol\":{\"keccak256\":\"0xc954613ecebf328e5597ec6346e0003bd92e89dd5d7a8d22afcf7f0e37d09816\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://10b4328baf6540dfc627edf296b71dc36f6bbaf189ceda34448835c990aa51fc\",\"dweb:/ipfs/QmcNEYF74KsiyC9ec11thesCsyXa786xryPDhPEMWbQBPe\"]},\"src/interfaces/Errors.sol\":{\"keccak256\":\"0x8edb007c1ff8b0db4e44e7965d7366bad68b4ef986b4f188736f9b13ba32f4eb\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://ab8326b1f89c7b158bdb5599f9c8bc2b041b0ea6af29d7b439ea5e09ee632799\",\"dweb:/ipfs/QmZEgCg2gyxFYvS4xiEH48ni8hXAiZnAytYszU2bxN6nFN\"]},\"src/interfaces/Events.sol\":{\"keccak256\":\"0x48bffd4f2c11cdd393a3090ef146f63c60a615b9f3671dc533f3b467292369e4\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://716d97b2275ff883e76198421956fa7158742f5554fea9f6a15601156d25b846\",\"dweb:/ipfs/QmUGm4BkH1cEcRRDoWphV6XFNwqf7uL863xt6VSmEDLW92\"]},\"src/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x84561e95a8e7dfba4f7dee61079362463b2a68d30edabac5fe1567f74bce61dd\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://8a13134420e1e32ffafc62c73428171cdd9a1fd9957249ffd6fbc262ac18831a\",\"dweb:/ipfs/QmYuY9gNxWABzpUTntQNvt45ez9LxbbFZeG4eX7RJW3KR6\"]},\"src/interfaces/ILimiter.sol\":{\"keccak256\":\"0xa3400fb4d7352aefa72255735441e3854d7b6ace1383c2d2f6512cdcad2778a7\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://140031091c5ff90af99663983cdb80ebf42c984baab017a5b09283c1d42fe2d4\",\"dweb:/ipfs/QmTMcdE4ENEH7QTtMzLZCi8dVHD8XMMZt5xASfMPS3pNxU\"]},\"src/interfaces/IVault.sol\":{\"keccak256\":\"0xde6a8b713fd6be77ac92f5543231a53ba4ff0e87b39b764b6920634efd1f3caf\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://3760f981528e3422a5ca0dceca1ba0f880ca6214addfa18bbbab3cc1e7a0dbcc\",\"dweb:/ipfs/QmQ5iq9fdgCqYmvMo7UWiGgWw9yMeRbWJH1uhXnJ5RMA39\"]},\"src/interfaces/IVaultManager.sol\":{\"keccak256\":\"0xa06dc26ebeafe827aa65e13fc39b74c3c15c9a57d55656334a33ec709b3b9ed5\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://2aba9a4aae8beb987a64dfb8b6001e2303d4bfc51cbd602e0cc126695afa5de9\",\"dweb:/ipfs/QmRvFBxA4nPnnXTSsAfLTtaY2ZWuMEydRsmZyH5E6tB2AF\"]},\"src/libraries/DelegationManagerLib.sol\":{\"keccak256\":\"0xa7493e5accffdb6fc6898c67daffd4f19f09b119872082a02f4debb5ce8b5551\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c781d7eae8be534b3db3179247e12b538750659834083a262f08db2c00db201c\",\"dweb:/ipfs/QmTep6jSJPDGnkt5S3hH6S2vUwV2he2TJss2hdfKhk7sLY\"]},\"src/libraries/Staker.sol\":{\"keccak256\":\"0x70ab4650ddbced33877459678e9bf4377a2bb750d7714bddd246db2c5ff3aa33\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://8bb3ba6635084ae89caaaf8dfb56cb59fb4f763c6476d881bb23ecb4ea64152f\",\"dweb:/ipfs/QmV6izusrXNe8zooBGQr66uLPBJm4FEhqWxoeXCKSjP3Fr\"]},\"src/libraries/Withdraw.sol\":{\"keccak256\":\"0xbf459e5ee0e3649d108ae50115995b04c6018acd91dee15c48b4b9822c242258\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f1e3195210b51fb5d5d2ab5ac416dd4d6771c7847604a8b2f67814f4d454f93d\",\"dweb:/ipfs/Qmdb5FxZJuDaGJyvpoBNgSQiq3qA5RYVgoTT4b8JtYK9Uy\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "staker",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "fetchQueuedWithdrawals",
                    "outputs": [
                        {
                            "internalType": "struct Withdraw.QueuedWithdrawal[]",
                            "name": "queuedWithdrawals",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "struct Withdraw.WithdrawRequest",
                                    "name": "request",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "contract IVault[]",
                                            "name": "vaults",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[]",
                                            "name": "shares",
                                            "type": "uint256[]"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "withdrawer",
                                            "type": "address"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Withdraw.QueuedWithdrawal[]",
                            "name": "withdrawals",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "struct Withdraw.WithdrawRequest",
                                    "name": "request",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "contract IVault[]",
                                            "name": "vaults",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[]",
                                            "name": "shares",
                                            "type": "uint256[]"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "withdrawer",
                                            "type": "address"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "finishWithdraw"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "vaultManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minWithdrawDelay",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "manager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Withdraw.QueuedWithdrawal",
                            "name": "withdrawal",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "struct Withdraw.WithdrawRequest",
                                    "name": "request",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "contract IVault[]",
                                            "name": "vaults",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[]",
                                            "name": "shares",
                                            "type": "uint256[]"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "withdrawer",
                                            "type": "address"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isWithdrawPending",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "toPause",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Withdraw.WithdrawRequest[]",
                            "name": "withdrawRequest",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "contract IVault[]",
                                    "name": "vaults",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "shares",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "address",
                                    "name": "withdrawer",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "startWithdraw",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "withdrawalRoots",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "struct Withdraw.QueuedWithdrawal[]",
                            "name": "",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "staker",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "delegatedTo",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "nonce",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "start",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "struct Withdraw.WithdrawRequest",
                                    "name": "request",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "contract IVault[]",
                                            "name": "vaults",
                                            "type": "address[]"
                                        },
                                        {
                                            "internalType": "uint256[]",
                                            "name": "shares",
                                            "type": "uint256[]"
                                        },
                                        {
                                            "internalType": "address",
                                            "name": "withdrawer",
                                            "type": "address"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "withdrawalDelay",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
                "@openzeppelin/=node_modules/@openzeppelin/",
                "forge-std/=lib/forge-std/src/",
                "solady/=node_modules/solady/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 20000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/interfaces/IDelegationManager.sol": "IDelegationManager"
            },
            "evmVersion": "paris",
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol": {
                "keccak256": "0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d",
                "urls": [
                    "bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205",
                    "dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
                "urls": [
                    "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
                    "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
                ],
                "license": "MIT"
            },
            "node_modules/solady/src/auth/Ownable.sol": {
                "keccak256": "0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3",
                "urls": [
                    "bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3",
                    "dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs"
                ],
                "license": "MIT"
            },
            "node_modules/solady/src/auth/OwnableRoles.sol": {
                "keccak256": "0xd797b6f74f6421d77d74cda55d494470495264ab100cff82a71ff2297d4870e3",
                "urls": [
                    "bzz-raw://b7504f97d8d3a908802f40fabbb4dcfcbf8e008b627be57f14ee84b67e0d9f3c",
                    "dweb:/ipfs/QmXYrdhsYTGDqBdSvvyXQNVpZRAPYXdCcERG8DDPXZY67L"
                ],
                "license": "MIT"
            },
            "src/interfaces/Constants.sol": {
                "keccak256": "0xc954613ecebf328e5597ec6346e0003bd92e89dd5d7a8d22afcf7f0e37d09816",
                "urls": [
                    "bzz-raw://10b4328baf6540dfc627edf296b71dc36f6bbaf189ceda34448835c990aa51fc",
                    "dweb:/ipfs/QmcNEYF74KsiyC9ec11thesCsyXa786xryPDhPEMWbQBPe"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/Errors.sol": {
                "keccak256": "0x8edb007c1ff8b0db4e44e7965d7366bad68b4ef986b4f188736f9b13ba32f4eb",
                "urls": [
                    "bzz-raw://ab8326b1f89c7b158bdb5599f9c8bc2b041b0ea6af29d7b439ea5e09ee632799",
                    "dweb:/ipfs/QmZEgCg2gyxFYvS4xiEH48ni8hXAiZnAytYszU2bxN6nFN"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/Events.sol": {
                "keccak256": "0x48bffd4f2c11cdd393a3090ef146f63c60a615b9f3671dc533f3b467292369e4",
                "urls": [
                    "bzz-raw://716d97b2275ff883e76198421956fa7158742f5554fea9f6a15601156d25b846",
                    "dweb:/ipfs/QmUGm4BkH1cEcRRDoWphV6XFNwqf7uL863xt6VSmEDLW92"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/IDelegationManager.sol": {
                "keccak256": "0x84561e95a8e7dfba4f7dee61079362463b2a68d30edabac5fe1567f74bce61dd",
                "urls": [
                    "bzz-raw://8a13134420e1e32ffafc62c73428171cdd9a1fd9957249ffd6fbc262ac18831a",
                    "dweb:/ipfs/QmYuY9gNxWABzpUTntQNvt45ez9LxbbFZeG4eX7RJW3KR6"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/ILimiter.sol": {
                "keccak256": "0xa3400fb4d7352aefa72255735441e3854d7b6ace1383c2d2f6512cdcad2778a7",
                "urls": [
                    "bzz-raw://140031091c5ff90af99663983cdb80ebf42c984baab017a5b09283c1d42fe2d4",
                    "dweb:/ipfs/QmTMcdE4ENEH7QTtMzLZCi8dVHD8XMMZt5xASfMPS3pNxU"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/IVault.sol": {
                "keccak256": "0xde6a8b713fd6be77ac92f5543231a53ba4ff0e87b39b764b6920634efd1f3caf",
                "urls": [
                    "bzz-raw://3760f981528e3422a5ca0dceca1ba0f880ca6214addfa18bbbab3cc1e7a0dbcc",
                    "dweb:/ipfs/QmQ5iq9fdgCqYmvMo7UWiGgWw9yMeRbWJH1uhXnJ5RMA39"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/interfaces/IVaultManager.sol": {
                "keccak256": "0xa06dc26ebeafe827aa65e13fc39b74c3c15c9a57d55656334a33ec709b3b9ed5",
                "urls": [
                    "bzz-raw://2aba9a4aae8beb987a64dfb8b6001e2303d4bfc51cbd602e0cc126695afa5de9",
                    "dweb:/ipfs/QmRvFBxA4nPnnXTSsAfLTtaY2ZWuMEydRsmZyH5E6tB2AF"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/libraries/DelegationManagerLib.sol": {
                "keccak256": "0xa7493e5accffdb6fc6898c67daffd4f19f09b119872082a02f4debb5ce8b5551",
                "urls": [
                    "bzz-raw://c781d7eae8be534b3db3179247e12b538750659834083a262f08db2c00db201c",
                    "dweb:/ipfs/QmTep6jSJPDGnkt5S3hH6S2vUwV2he2TJss2hdfKhk7sLY"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/libraries/Staker.sol": {
                "keccak256": "0x70ab4650ddbced33877459678e9bf4377a2bb750d7714bddd246db2c5ff3aa33",
                "urls": [
                    "bzz-raw://8bb3ba6635084ae89caaaf8dfb56cb59fb4f763c6476d881bb23ecb4ea64152f",
                    "dweb:/ipfs/QmV6izusrXNe8zooBGQr66uLPBJm4FEhqWxoeXCKSjP3Fr"
                ],
                "license": "SEE LICENSE IN LICENSE"
            },
            "src/libraries/Withdraw.sol": {
                "keccak256": "0xbf459e5ee0e3649d108ae50115995b04c6018acd91dee15c48b4b9822c242258",
                "urls": [
                    "bzz-raw://f1e3195210b51fb5d5d2ab5ac416dd4d6771c7847604a8b2f67814f4d454f93d",
                    "dweb:/ipfs/Qmdb5FxZJuDaGJyvpoBNgSQiq3qA5RYVgoTT4b8JtYK9Uy"
                ],
                "license": "SEE LICENSE IN LICENSE"
            }
        },
        "version": 1
    },
    "id": 88
}